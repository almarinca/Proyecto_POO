/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Data.Tablero;
import java.awt.BorderLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.geom.AffineTransform;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author Danilo
 */
public class GUILaberinto extends javax.swing.JFrame {

    public GUILaberinto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1129, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 738, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUILaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUILaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUILaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUILaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GUILaberinto laberinto = new GUILaberinto();
                laberinto.setVisible(true);
                laberinto.construirTablero();
            }
        });
    }

    public void construirTablero() {
        dibujarFicha(this.getGraphics(), Tablero.getTablero()[0][0].getImagen(), (0*100)+100, (0*100)+100, Tablero.getTablero()[0][0].getGiro());
        dibujarFicha(this.getGraphics(), Tablero.getTablero()[0][2].getImagen(), (0*100)+100, (2*100)+100, Tablero.getTablero()[0][2].getGiro());
        dibujarFicha(this.getGraphics(), Tablero.getTablero()[0][4].getImagen(), (0*100)+100, (4*100)+100, Tablero.getTablero()[0][4].getGiro());
        dibujarFicha(this.getGraphics(), Tablero.getTablero()[0][6].getImagen(), (0*100)+100, (6*100)+100, Tablero.getTablero()[0][6].getGiro());
        for(int i=0;i<7;i++){
            for(int j=0;j<7;j++){
                dibujarFicha(this.getGraphics(), Tablero.getTablero()[i][j].getImagen(), (i*100)+100, (j*100)+100, Tablero.getTablero()[i][j].getGiro());
            }
        }
    }

    public void dibujarFicha(Graphics g, ImageIcon image, int posx, int posy, int girar) {
        Graphics2D g2d = (Graphics2D) g;
        AffineTransform tx = new AffineTransform();
        tx.translate(posy, posx);
        tx.rotate(Math.toRadians(girar*90), 50, 50);
        g2d.drawImage(image.getImage(), tx, this);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
